Lab 14 : Working with DOM elements III

1. Make a copy of your javascript file from lab 13 or use the included code.

2. Rewrite the code from lab 14 in the init() method. Using DOM traversal and a 
   while loop, navigate through the children of the <tbody> element. (Hint: you 
   will need two nested while loops)
   - Loop through to find the TD elements (Hint: nodeName or tagName) and add a 
     DIV element with an onclick attribute with the value squareClicked(this).

3. In the init() method, create an array of arrays that represents a "saved game
   state". Element 0 in the array is the moves for "X" and element 1 is the
   moves for "O".
   - Player X nodes: 1,3,5,8
   - Player O nodes: 4,6,7,2
	 
4. Create a function called "loadGame(state)" which takes the array of arrays as
   a parameter. In this function create code to load a game in progress. You can 
   copy the loops used in step 2.
   - Check what kind of node you are dealing with. Log the node type to the
     console.
   - Ignore any node except for <td> table cell elements.
   - Get the ID attribute for each TD as you navigate and check it against your
     saved game state.
   - If you've got a match, use the "InnerHTML" property of the node to set up a
     <div> with the appropriate class.

You should see the X's and O's on your board. The new game button should still 
clear the board.
